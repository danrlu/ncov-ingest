#!/bin/bash
set -euo pipefail

bin="$(dirname "$0")"

main() {
    local quiet=0

    for arg; do
        case "$arg" in
            --quiet)
                quiet=1
                shift;;
            *)
                break;;
        esac
    done

    local src="${1:?A source s3:// URL is required as the first argument.}"
    local dst="${2:?A destination file path is required as the second argument.}"

    local s3path="${src#s3://}"
    local bucket="${s3path%%/*}"
    local key="${s3path#*/}"

    local src_hash dst_hash no_hash=0000000000000000000000000000000000000000000000000000000000000000
    dst_hash="$(sha256sum "$dst" 2>/dev/null | awk '{ print $1 }' || true)"
    src_hash="$(aws s3api head-object --bucket "$bucket" --key "$key" --query Metadata.sha256sum --output text || echo "$no_hash")"

    echo "$src_hash $src"
    echo "$dst_hash $dst"

    echo "[ INFO] Downloading $src â†’ $dst"
    if [[ $src_hash != "$dst_hash" ]]; then
        aws s3 cp --no-progress "$src" - |
        if [[ "$src" == *.gz ]]; then
            gunzip -cfq
        elif  [[ "$src" == *.xz ]]; then
            xz -dcq
        else
            cat
        fi > "$dst"

        if [[ $quiet == 1 ]]; then
            echo "Quiet mode. No Slack notification sent."
            exit 0
        fi

        if ! "$bin"/notify-slack "Updated $dst available."; then
            echo "Notifying Slack failed, but exiting with success anyway."
        fi
    else
        echo "Files are identical, skipping upload"
    fi
}

content-type() {
    BASENAME="${1}"
    BASENAME="${BASENAME%.gz}"  # Remove trailing ".gz"
    BASENAME="${BASENAME%.xz}"  # Remove trailing ".xz"

    case "${BASENAME}" in
        *.tsv)      echo --content-type=text/tab-separated-values;;
        *.csv)      echo --content-type=text/comma-separated-values;;
        *.ndjson)   echo --content-type=application/x-ndjson;;
        *)          echo --content-type=text/plain;;
    esac
}

content-encoding() {
    case "$1" in
        *.gz) echo --content-encoding=gzip;;
        *.xz) echo --content-encoding=xz;;
    esac
}

main "$@"
